<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="Station">
	<select id="user_info" resultType="map"  parameterType="map">
		SELECT * FROM user  WHERE user_name=#{user_name} and user_pwd =Password(#{user_pwd})
	</select>
	
	<select id="info" resultType="map" parameterType="int">
		SELECT *  FROM Tower_info WHERE t_id=#{id}
	</select>

	<select id="info_ext" resultType="map" parameterType="int">
		SELECT    c_d_type ,c_d_v  FROM Tower_info WHERE t_id=#{id}
	</select>

	 <select id="grouplist" resultType="map" parameterType="int">
	 <![CDATA[
		SELECT t_id,t_version FROM 	Tower_info WHERE t_status >=0 and  t_group=#{id} order by t_version DESC
		]]>
	</select>
	
	<select id="city_count" resultType="map"  >
			SELECT c.city,  IF(ISNULL(t.num),0,t.num ) AS num FROM `city` c LEFT JOIN  (SELECT t_city ,COUNT(1) AS  num FROM `Tower_info` WHERE t_new_sign=1 AND t_status=1 GROUP BY t_city )  t ON c.city = t.t_city  ORDER BY c.id
	</select>


	<select id="count" resultType="int" parameterType="map">
		SELECT count(*) FROM Tower_info WHERE   1=1 
		<if test="t_status == ''  or   t_status == null">
			  and t_status =1
		</if>
		
		<if test="t_status != ''   and   t_status != null">
			<![CDATA[  and t_status>=0	]]>
		</if>
		
		<if test="t_name != '' and  t_name != null">
			and t_name=#{t_name}
		</if>
		<if test="t_city != '' and t_city != null">
			and t_city = #{t_city}
		</if>
		<if test="t_county != '' and  t_county != null">
			and t_county = #{t_county}
		</if>
	</select>


	<select id="list" resultType="map" parameterType="map">
		<![CDATA[
		SELECT t_id,t_name,t_city,t_county ,t_version ,cast(t_cg_time as
		char(25)) as t_cg_time,t_cg_u_id,t_status,t_new_sign FROM Tower_info WHERE 1=1 
		]]>
		
		<if test="t_status == ''  or   t_status == null">
			  and t_status =1
		</if>
		
		<if test="t_status != ''   and   t_status != null">
			<![CDATA[  and t_status>=0	]]>
		</if>
		
		<if test="t_name != '' and  t_name != null">
			and t_name=#{t_name}
		</if>
		<if test="t_city != '' and t_city != null">
			and t_city = #{t_city}
		</if>
		<if test="t_county != '' and  t_county != null">
			and t_county = #{t_county}
		</if>
		
		<if test="orderby != '' and  orderby != null">
			order by  #{orderby}   
		</if>
		
		<if test="orderby  == ''  ||   orderby == null">
			order by t_cg_time desc
		</if>

		 limit #{pageIndex}, #{pageSize}
	</select>



	<select id="getVID" resultType="map" parameterType="string">
		SELECT
		t_id,t_version FROM Tower_info WHERE t_status=1 and
		t_group=#{t_group}
		order by t_version desc
	</select>



	<delete id="del" parameterType="map">
		<![CDATA[
			delete from users where id = #{id}
		]]>
	</delete>


	<update id="upd" parameterType="map">

		update Tower_info set t_cg_time = now(),t_cg_u_id=#{t_cg_u_id}
		
		<if test="t_name != '' and  t_name != null">,t_name = #{t_name},t_status=0</if>
		<if test="t_city != '' and  t_city != null">,t_city = #{t_city}</if>
		<if test="t_county != '' and  t_county != null">,t_county = #{t_county}</if>
		<if test="t_township != '' and  t_township != null">,t_township = #{t_township}</if>
		<if test="t_address != '' and  t_address != null">,t_address = #{t_address}</if>
		<if test="t_longitude != '' and  t_longitude != null">,t_longitude = #{t_longitude}</if>
		<if test="t_latitude != '' and  t_latitude != null">,t_latitude = #{t_latitude}</if>
		<if test="t_accuracy != '' and  t_accuracy != null">,t_accuracy = #{t_accuracy}</if>
		<if test="t_altitude != '' and  t_altitude != null">,t_altitude = #{t_altitude}</if>
		<if test="t_build_date != '' and  t_build_date != null">,t_build_date = #{t_build_date}</if>
		<if test="t_purpose != '' and  t_purpose != null">,t_purpose = #{t_purpose}</if>
		<if test="t_parent != '' and  t_parent != null">,t_parent = #{t_parent}</if>
		<if test="t_distance != '' and  t_distance != null">,t_distance = #{t_distance}</if>
		<if test="t_move != '' and  t_move != null">,t_move = #{t_move}</if>
		<if test="t_version != '' and  t_version != null">,t_version = #{t_version}</if>
		<if test="t_group != '' and  t_group != null">,t_group = #{t_group}</if>

		<if test="p_primary != '' and  p_primary != null">,p_primary = #{p_primary}</if>
		<if test="p_standby != '' and  p_standby != null">,p_standby = #{p_standby}</if>
		<if test="p_t_capacity != '' and  p_t_capacity != null">,p_t_capacity = #{p_t_capacity}</if>
		<if test="p_t_quantity != '' and  p_t_quantity != null">,p_t_quantity = #{p_t_quantity}</if>
		<if test="p_t_load != '' and  p_t_load != null">,p_t_load = #{p_t_load}</if>
		<if test="p_a_power != '' and  p_a_power != null">,p_a_power = #{p_a_power}</if>
		<if test="p_u_capacity != '' and  p_u_capacity != null">,p_u_capacity = #{p_u_capacity}</if>
		<if test="p_u_quantity != '' and  p_u_quantity != null">,p_u_quantity = #{p_u_quantity}</if>
		<if test="p_u_load != '' and  p_u_load != null">,p_u_load = #{p_u_load}</if>
		<if test="p_m_capacity != '' and  p_m_capacity != null">,p_m_capacity = #{p_m_capacity}</if>
		<if test="p_m_quantity != '' and  p_m_quantity != null">,p_m_quantity = #{p_m_quantity}</if>
		<if test="p_m_load != '' and  p_m_load != null">,p_m_load = #{p_m_load}</if>
		<if test="p_resistance != '' and  p_resistance != null">,p_resistance = #{p_resistance}</if>

		<if test="c_p_layers != '' and  c_p_layers != null">
			,c_p_layers = #{c_p_layers},
			c_c_layers = #{c_c_layers},
			c_l_type = #{c_l_type},
			c_l_v1 = #{c_l_v1},
			c_l_v2 = #{c_l_v2},
			c_g_type = #{c_g_type},
			c_g_v = #{c_g_v},
			c_as_type = #{c_as_type},
			c_as_cool = #{c_as_cool},
			c_as_power = #{c_as_power},
			c_a_type =#{c_a_type},
			c_a_volume = #{c_a_volume},
			c_a_power = #{c_a_power},
			c_a_pressure = #{c_a_pressure},
			c_d_type = #{c_d_type},
			c_d_v =#{c_d_v}
		</if>

		<if test="t_p_layers != '' and  t_p_layers != null">
			,t_p_layers = #{t_p_layers},
			t_c_layers = #{t_c_layers},
			t_l_type = #{t_l_type},
			t_l_v1 = #{t_l_v1},
			t_l_v2 = #{t_l_v2},
			t_g_type = #{t_g_type},
			t_g_v = #{t_g_v},
			t_as_type = #{t_as_type},
			t_as_cool = #{t_as_cool},
			t_as_power = #{t_as_power},
			t_a_type = #{t_a_type},
			t_a_volume = #{t_a_volume},
			t_a_power = #{t_a_power},
			t_a_pressure = #{t_a_pressure},
			t_d_type = #{t_d_type},
			t_d_v = #{t_d_v}
		</if>

		<if test="cm_p_layers != '' and  cm_p_layers != null">
			,cm_p_layers = #{cm_p_layers},
			cm_c_layers = #{cm_c_layers},
			cm_l_type = #{cm_l_type},
			cm_l_v1 = #{cm_l_v1},
			cm_l_v2 = #{cm_l_v2},
			cm_l_v3 = #{cm_l_v3},
			cm_g_type = #{cm_g_type},
			cm_g_v = #{cm_g_v},
			cm_as_type = #{cm_as_type},
			cm_as_cool = #{cm_as_cool},
			cm_as_power = #{cm_as_power},
			cm_a_type = #{cm_a_type},
			cm_a_volume = #{cm_a_volume},
			cm_a_power = #{cm_a_power},
			cm_a_pressure = #{cm_a_pressure}
		</if>
		
		<if test="ta_net != '' and  ta_net != null">
			,ta_net = #{ta_net},
			ta_s_centre = #{ta_s_centre},
			ta_sm_i = #{ta_sm_i},
			ta_sm_i_type = #{ta_sm_i_type},
			ta_sm_c_i = #{ta_sm_c_i},
			ta_sm_m_c = #{ta_sm_m_c},
			ta_pm = #{ta_pm},
			ta_pm_ups = #{ta_pm_ups},
			ta_pm_pc = #{ta_pm_pc},
			ta_pm_rp = #{ta_pm_rp},
			ta_vs = #{ta_vs},
			ta_vs_region = #{ta_vs_region},
			ta_vs_am = #{ta_vs_am},
			ta_vs_ia = #{ta_vs_ia},
			ta_vs_ia_n = #{ta_vs_ia_n},
			ta_vs_io = #{ta_vs_io},
			ta_vs_io_n = #{ta_vs_io_n},
			ta_vs_pg = #{ta_vs_pg},
			ta_vs_pg_n = #{ta_vs_pg_n},
			ta_vs_em = #{ta_vs_em},
			ta_vs_em_n = #{ta_vs_em_n},
			ta_vs_em_position = #{ta_vs_em_position},
			ta_vs_em_ci = #{ta_vs_em_ci}
		</if>

		<if test="tm_longitude != '' and  tm_longitude != null">
			,tm_longitude = #{tm_longitude},
			tm_latitude = #{tm_latitude},
			tm_altitude = #{tm_altitude},
			tm_position = #{tm_position},
			tm_ice = #{tm_ice},
			tm_height = #{tm_height},
			tm_hemline = #{tm_hemline},
			tm_style = #{tm_style},
			tm_style_v= #{tm_style_v},
			tm_build_unit = #{tm_build_unit},
			tm_design_unit = #{tm_design_unit},
			tm_lifespan = #{tm_lifespan},
			tm_s_status = #{tm_s_status}
		</if>

		<if test="t_new_sign != '' and  t_new_sign != null">,t_new_sign = #{t_new_sign}</if>
		<if test="t_status != '' and  t_status != null">,t_status = #{t_status}</if>
		
		where t_id=#{t_id}

	</update>


	<insert id="add" parameterType="map" useGeneratedKeys="true"
		keyProperty="t_id">
		<![CDATA[
			insert into Tower_info  (t_c_time,t_c_u_id,t_cg_time,t_cg_u_id)  values (now(),#{t_c_u_id},now(),#{t_c_u_id})
		]]>
	</insert>
	
	
		<insert id="addgroup" parameterType="map" useGeneratedKeys="true" 		keyProperty="t_group">
		<![CDATA[
			 INSERT INTO  Tower_group ( t_group_name) VALUES (#{t_group_name})
		]]>
	</insert>
	
</mapper>
